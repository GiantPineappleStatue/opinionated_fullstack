const bcrypt=require("bcrypt");const mysql=require("mysql2/promise");const{v7:uuidv7}=require("uuid");require("dotenv").config();const dbConfig={host:"mysql",port:parseInt(process.env.DB_PORT||"3306",10),user:process.env.DB_USERNAME||"user",password:process.env.DB_PASSWORD||"password",database:process.env.DB_DATABASE||"fullstack_db",connectTimeout:10000,waitForConnections:true};async function createTestUser(){let connection;try{console.log("Connecting to database...");connection=await mysql.createConnection(dbConfig);const[existingUsers]=await connection.query("SELECT * FROM users WHERE email = ?", ["test@test.com"]);if(existingUsers.length>0){console.log("Test user already exists. Skipping creation.");return;}const userId=uuidv7();const hashedPassword=await bcrypt.hash("password123",10);const now=new Date();await connection.execute("INSERT INTO users (id, email, password, name, role, email_verified, created_at, updated_at) VALUES (?, ?, ?, ?, ?, ?, ?, ?)", [userId,"test@test.com",hashedPassword,"Test User","USER",1,now,now]);console.log("Test user created successfully with credentials:");console.log("Email: test@test.com");console.log("Password: password123");}catch(error){console.error("Error creating test user:",error.message);}finally{if(connection){await connection.end();}}}createTestUser();
